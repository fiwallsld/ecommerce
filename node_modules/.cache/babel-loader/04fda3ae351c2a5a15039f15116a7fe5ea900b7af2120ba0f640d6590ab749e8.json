{"ast":null,"code":"import axios from \"axios\";\nimport queryString from \"query-string\";\nimport RootAPI from \"./RootAPI\";\nconst axiosClient = axios.create({\n  baseURL: RootAPI,\n  withCredentials: \"include\",\n  headers: {\n    \"content-type\": \"application/json\"\n  },\n  paramsSerializer: params => queryString.stringify(params)\n});\naxiosClient.interceptors.request.use(async config => {\n  const token = localStorage.getItem(\"token\");\n  // console.log(\"Token truoc khi gui request:\", token);\n  if (token) config.headers[\"Authorization\"] = `Bearer ${token}`;\n  return config;\n});\naxiosClient.interceptors.response.use(response => {\n  if (response && response.data) {\n    return response.data;\n  }\n  return response;\n}, error => {\n  // Handle errors\n  if (error.response.data.status) {\n    // Xử lý lỗi từ phản hồi HTTP\n    console.error(\"HTTP error:\", error.response.status);\n    throw error;\n  } else if (error.request) {\n    // Xử lý lỗi không nhận được phản hồi từ server\n    console.error(\"No response received from server\");\n  } else {\n    // Xử lý lỗi trong quá trình thiết lập yêu cầu\n    console.error(\"Error setting up the request:\", error.message);\n  }\n\n  // Truyền lỗi để có thể xử lý nó ở các thành phần khác\n  // return Promise.reject(error);\n});\n\nexport default axiosClient;","map":{"version":3,"names":["axios","queryString","RootAPI","axiosClient","create","baseURL","withCredentials","headers","paramsSerializer","params","stringify","interceptors","request","use","config","token","localStorage","getItem","response","data","error","status","console","message"],"sources":["/Users/hoangthanh/Desktop/Code/ASM3/client/src/API/axiosClient.jsx"],"sourcesContent":["import axios from \"axios\";\nimport queryString from \"query-string\";\nimport RootAPI from \"./RootAPI\";\n\nconst axiosClient = axios.create({\n  baseURL: RootAPI,\n  withCredentials: \"include\",\n  headers: {\n    \"content-type\": \"application/json\",\n  },\n  paramsSerializer: (params) => queryString.stringify(params),\n});\n\naxiosClient.interceptors.request.use(async (config) => {\n  const token = localStorage.getItem(\"token\");\n  // console.log(\"Token truoc khi gui request:\", token);\n  if (token) config.headers[\"Authorization\"] = `Bearer ${token}`;\n\n  return config;\n});\n\naxiosClient.interceptors.response.use(\n  (response) => {\n    if (response && response.data) {\n      return response.data;\n    }\n    return response;\n  },\n  (error) => {\n    // Handle errors\n    if (error.response.data.status) {\n      // Xử lý lỗi từ phản hồi HTTP\n      console.error(\"HTTP error:\", error.response.status);\n      throw error;\n    } else if (error.request) {\n      // Xử lý lỗi không nhận được phản hồi từ server\n      console.error(\"No response received from server\");\n    } else {\n      // Xử lý lỗi trong quá trình thiết lập yêu cầu\n      console.error(\"Error setting up the request:\", error.message);\n    }\n\n    // Truyền lỗi để có thể xử lý nó ở các thành phần khác\n    // return Promise.reject(error);\n  }\n);\nexport default axiosClient;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,WAAW,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC/BC,OAAO,EAAEH,OAAO;EAChBI,eAAe,EAAE,SAAS;EAC1BC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,gBAAgB,EAAGC,MAAM,IAAKR,WAAW,CAACS,SAAS,CAACD,MAAM;AAC5D,CAAC,CAAC;AAEFN,WAAW,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EACrD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C;EACA,IAAIF,KAAK,EAAED,MAAM,CAACP,OAAO,CAAC,eAAe,CAAC,GAAI,UAASQ,KAAM,EAAC;EAE9D,OAAOD,MAAM;AACf,CAAC,CAAC;AAEFX,WAAW,CAACQ,YAAY,CAACO,QAAQ,CAACL,GAAG,CAClCK,QAAQ,IAAK;EACZ,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE;IAC7B,OAAOD,QAAQ,CAACC,IAAI;EACtB;EACA,OAAOD,QAAQ;AACjB,CAAC,EACAE,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACF,QAAQ,CAACC,IAAI,CAACE,MAAM,EAAE;IAC9B;IACAC,OAAO,CAACF,KAAK,CAAC,aAAa,EAAEA,KAAK,CAACF,QAAQ,CAACG,MAAM,CAAC;IACnD,MAAMD,KAAK;EACb,CAAC,MAAM,IAAIA,KAAK,CAACR,OAAO,EAAE;IACxB;IACAU,OAAO,CAACF,KAAK,CAAC,kCAAkC,CAAC;EACnD,CAAC,MAAM;IACL;IACAE,OAAO,CAACF,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACG,OAAO,CAAC;EAC/D;;EAEA;EACA;AACF,CACF,CAAC;;AACD,eAAepB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}