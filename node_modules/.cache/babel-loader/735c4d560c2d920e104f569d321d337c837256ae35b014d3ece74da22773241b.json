{"ast":null,"code":"let initalState = {\n  userId: \"\",\n  listCart: []\n};\nconst ReducerCart = (state = initalState, action) => {\n  switch (action.type) {\n    case \"RESET_CART\":\n      // console.log(\"user: \", action.data);\n      state = {\n        userId: \"\",\n        listCart: []\n      };\n      return state;\n\n    //Nhận dữ liệu id_user và thay đổi state\n    case \"ADD_USER\":\n      // console.log(\"user: \", action.data);\n      state = {\n        userId: action.data.userId,\n        // listCart: state.listCart,\n        listCart: action.data.listCart\n      };\n      return state;\n    case \"ADD_CART\":\n      //Lấy dữ liệu được truyền tới\n      const data_add_cart = action.data;\n\n      // console.log(data_add_cart);\n\n      //Lấy dữ liệu có sẵn trong state\n      const add_cart = state.listCart;\n      if (add_cart.length < 1) {\n        add_cart.push(data_add_cart);\n      } else {\n        //Tìm Vị Trí của sản phẩm đã mua\n        const indexCart = add_cart.findIndex(value => {\n          return value._id === data_add_cart._id;\n        });\n\n        //Tìm xem thử sản phẩm này đã mua hay chưa\n        const findCart = add_cart.find(value => {\n          return value._id === data_add_cart._id;\n        });\n\n        //Nếu này chưa được mua thì mình push vào\n        //Còn đã từng mua rồi thì mình update tại vị trí indexCart mà mình vừa tìm được\n        if (!findCart) {\n          add_cart.push(data_add_cart);\n          // console.log(\"Push\");\n        } else {\n          add_cart[indexCart].quantity = parseInt(add_cart[indexCart].quantity) + parseInt(data_add_cart.quantity);\n          // console.log(\"Update\");\n        }\n      }\n\n      state = {\n        userId: state.userId,\n        listCart: add_cart\n      };\n      console.log(state);\n      return state;\n    case \"DELETE_CART\":\n      //Lấy dữ liệu được truyền tới\n      const data_delete_cart = action.data;\n\n      //Lấy dữ diệu có sẵn trong state\n      const delete_cart = state.listCart;\n\n      //Tìm kiểm vị trí mà cần xóa\n      const indexDelete = delete_cart.findIndex(value => {\n        return value.idProduct === data_delete_cart.idProduct;\n      });\n\n      //Xóa theo vị trí\n      delete_cart.splice(indexDelete, 1);\n      state = {\n        userId: state.userId,\n        listCart: delete_cart\n      };\n      return state;\n    case \"DELETE_ALL_CART\":\n      const data_delete_all_cart = action.data;\n      state = {\n        userId: state.userId,\n        listCart: data_delete_all_cart\n      };\n      return state;\n    case \"UPDATE_CART\":\n      // console.log(\"HANDLE UPDATE_CART:----------\");\n      // console.log(action.data);\n      const data_update_cart = action.data;\n\n      // console.log(\"data_update_cart-:\", data_update_cart);\n      const update_cart = state.listCart;\n      // console.log(\"update_cart-:\", update_cart);\n\n      const index = update_cart.findIndex(value => {\n        return value._id === data_update_cart.idProduct;\n      });\n      // console.log(index);\n\n      update_cart[index].quantity = data_update_cart.quantity;\n      state = {\n        userId: state.userId,\n        listCart: update_cart\n      };\n      // console.log(\"END HANDLE UPDATE_CART\");\n      return state;\n    default:\n      return state;\n  }\n};\n_c = ReducerCart;\nexport default ReducerCart;\nvar _c;\n$RefreshReg$(_c, \"ReducerCart\");","map":{"version":3,"names":["initalState","userId","listCart","ReducerCart","state","action","type","data","data_add_cart","add_cart","length","push","indexCart","findIndex","value","_id","findCart","find","quantity","parseInt","console","log","data_delete_cart","delete_cart","indexDelete","idProduct","splice","data_delete_all_cart","data_update_cart","update_cart","index","_c","$RefreshReg$"],"sources":["/Users/zawnhiu/Desktop/Code/ASM3/client/src/Redux/Reducer/ReducerCart.jsx"],"sourcesContent":["let initalState = {\n  userId: \"\",\n  listCart: [],\n};\n\nconst ReducerCart = (state = initalState, action) => {\n  switch (action.type) {\n    case \"RESET_CART\":\n      // console.log(\"user: \", action.data);\n      state = {\n        userId: \"\",\n        listCart: [],\n      };\n      return state;\n\n    //Nhận dữ liệu id_user và thay đổi state\n    case \"ADD_USER\":\n      // console.log(\"user: \", action.data);\n      state = {\n        userId: action.data.userId,\n        // listCart: state.listCart,\n        listCart: action.data.listCart,\n      };\n      return state;\n    case \"ADD_CART\":\n      //Lấy dữ liệu được truyền tới\n      const data_add_cart = action.data;\n\n      // console.log(data_add_cart);\n\n      //Lấy dữ liệu có sẵn trong state\n      const add_cart = state.listCart;\n\n      if (add_cart.length < 1) {\n        add_cart.push(data_add_cart);\n      } else {\n        //Tìm Vị Trí của sản phẩm đã mua\n        const indexCart = add_cart.findIndex((value) => {\n          return value._id === data_add_cart._id;\n        });\n\n        //Tìm xem thử sản phẩm này đã mua hay chưa\n        const findCart = add_cart.find((value) => {\n          return value._id === data_add_cart._id;\n        });\n\n        //Nếu này chưa được mua thì mình push vào\n        //Còn đã từng mua rồi thì mình update tại vị trí indexCart mà mình vừa tìm được\n        if (!findCart) {\n          add_cart.push(data_add_cart);\n          // console.log(\"Push\");\n        } else {\n          add_cart[indexCart].quantity =\n            parseInt(add_cart[indexCart].quantity) +\n            parseInt(data_add_cart.quantity);\n          // console.log(\"Update\");\n        }\n      }\n\n      state = {\n        userId: state.userId,\n        listCart: add_cart,\n      };\n\n      console.log(state);\n      return state;\n\n    case \"DELETE_CART\":\n      //Lấy dữ liệu được truyền tới\n      const data_delete_cart = action.data;\n\n      //Lấy dữ diệu có sẵn trong state\n      const delete_cart = state.listCart;\n\n      //Tìm kiểm vị trí mà cần xóa\n      const indexDelete = delete_cart.findIndex((value) => {\n        return value.idProduct === data_delete_cart.idProduct;\n      });\n\n      //Xóa theo vị trí\n      delete_cart.splice(indexDelete, 1);\n\n      state = {\n        userId: state.userId,\n        listCart: delete_cart,\n      };\n\n      return state;\n\n    case \"DELETE_ALL_CART\":\n      const data_delete_all_cart = action.data;\n\n      state = {\n        userId: state.userId,\n        listCart: data_delete_all_cart,\n      };\n\n      return state;\n\n    case \"UPDATE_CART\":\n      // console.log(\"HANDLE UPDATE_CART:----------\");\n      // console.log(action.data);\n      const data_update_cart = action.data;\n\n      // console.log(\"data_update_cart-:\", data_update_cart);\n      const update_cart = state.listCart;\n      // console.log(\"update_cart-:\", update_cart);\n\n      const index = update_cart.findIndex((value) => {\n        return value._id === data_update_cart.idProduct;\n      });\n      // console.log(index);\n\n      update_cart[index].quantity = data_update_cart.quantity;\n\n      state = {\n        userId: state.userId,\n        listCart: update_cart,\n      };\n      // console.log(\"END HANDLE UPDATE_CART\");\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default ReducerCart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}